{"version":3,"sources":["js/data/cities.js","js/components/Search/index.jsx","js/components/DateDisplay/index.jsx","js/components/Temp/index.jsx","js/components/WeatherIcon/index.jsx","js/components/CurrentWeather/index.styled.jsx","js/components/CurrentWeather/index.jsx","js/components/Preview/index.jsx","js/components/DailyForecast/index.jsx","js/fetches/weather.js","js/components/Main/index.styled.jsx","js/components/Main/index.jsx","reportWebVitals.js","index.js"],"names":["cities","name","lat","lon","Chicago","Austin","London","cityNames","Object","keys","Search","_ref","cityName","onChange","_jsx","Dropdown","options","value","placeholder","tabIndex","DateDisplay","ts","timezone","short","restProps","date","Date","dateProps","weekday","timeZone","month","day","displayedDate","toLocaleString","displayedTime","hour","minute","hour12","_jsxs","children","StyledSpan","styled","span","_templateObject","_taggedTemplateLiteral","props","high","Temp","ariaLabel","displayed","Math","round","renderedAriaLabel","concat","svgs","thunderstorm","snow","WeatherIcon","description","animated","file","src","alt","CurrentCard","div","IconContainer","_templateObject2","LargeTemp","_templateObject3","StyledDescription","_templateObject4","StyledLocationAndTime","_templateObject5","CurrentWeather","weather","current","daily","temp","dt","min","max","height","StyledDate","PreviewCard","Preview","ForecastContainer","DailyForecast","forecast","slice","map","API_KEY","GlobalStyle","createGlobalStyle","MainContainer","MainContent","SearchContainer","CurrentContainer","Main","setWeather","useState","setCityName","loading","setLoading","useEffect","async","city","fetch","json","getCurrentAndForecast","fetchWeather","select","_Fragment","style","textAlign","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92bd3014.chunk.js","sourcesContent":["const cities = {\n  \"San Diego\": {\n    name: \"San Diego\",\n    lat: 32.8242404,\n    lon: -117.3891735,\n  },\n  \"Santa Clara\": {\n    name: \"Santa Clara\",\n    lat: 37.3708698,\n    lon: -122.037593,\n  },\n  \"New York\": {\n    name: \"New York\",\n    lat: 40.6971494,\n    lon: -74.2598713,\n  },\n  Chicago: {\n    name: \"Chicago\",\n    lat: 41.878113,\n    lon: -87.629799,\n  },\n  Austin: {\n    name: \"Austin\",\n    lat: 30.267153,\n    lon: -97.743057,\n  },\n  London: {\n    name: \"London\",\n    lat: 51.509865,\n    lon: -0.118092,\n  },\n};\n\nexport default cities;\n","import Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport cities from \"js/data/cities\";\n\nconst cityNames = Object.keys(cities);\n\nconst Search = ({ cityName, onChange }) => {\n  // TODO: doesn't seem like this dropdown library is tabbable\n  return (\n    <Dropdown\n      options={cityNames}\n      onChange={onChange}\n      value={cityName}\n      placeholder=\"Select a city\"\n      tabIndex=\"0\"\n    />\n  );\n};\n\nexport default Search;\n","const DateDisplay = ({ ts, timezone, short = true, ...restProps }) => {\n  const date = new Date(ts * 1000);\n  let dateProps = {\n    weekday: short ? \"short\" : \"long\",\n    timeZone: timezone,\n  };\n  if (!short) {\n    dateProps = {\n      ...dateProps,\n      month: \"long\",\n      day: \"numeric\",\n    };\n  }\n  const displayedDate = date.toLocaleString(\"en-us\", dateProps);\n  const displayedTime = date.toLocaleString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    hour12: true,\n    timeZone: timezone,\n  });\n  return (\n    <div {...restProps}>\n      <div>{displayedDate}</div>\n      <div>{!short && displayedTime}</div>\n    </div>\n  );\n};\n\nexport default DateDisplay;\n","import styled from \"styled-components\";\n\nconst StyledSpan = styled.span`\n  color: ${(props) => (props.high ? \"#4f4f4f\" : \"#888\")};\n  font-weight: 500;\n`;\n\nconst Temp = ({\n  value,\n  high = true,\n  \"aria-label\": ariaLabel,\n  ...restProps\n}) => {\n  const displayed = Math.round(value);\n\n  let renderedAriaLabel;\n  if (ariaLabel) {\n    renderedAriaLabel = ariaLabel;\n  } else if (high) {\n    renderedAriaLabel = \"high\";\n  } else {\n    renderedAriaLabel = \"low\";\n  }\n  renderedAriaLabel = `${renderedAriaLabel} ${displayed} degrees`;\n\n  return (\n    <StyledSpan high={high} aria-label={renderedAriaLabel} {...restProps}>\n      {displayed}&deg;\n    </StyledSpan>\n  );\n};\n\nexport default Temp;\n","const svgs = {\n  \"few clouds\": \"cloudy-day-1\",\n  \"broken clouds\": \"cloudy-day-2\",\n  \"scattered clouds\": \"cloudy-day-3\",\n  \"overcast clouds\": \"cloudy\",\n  \"clear sky\": \"day\",\n  \"light rain\": \"rainy-4\",\n  \"moderate rain\": \"rainy-5\",\n  thunderstorm: \"thunder\",\n  \"light snow\": \"snowy-4\",\n  snow: \"snowy-5\",\n};\n\nconst WeatherIcon = ({ description, animated = false, ...restProps }) => {\n  const file = svgs[description] || \"day\";\n  return (\n    <img\n      src={`/${animated ? \"animated\" : \"static\"}/${file}.svg`}\n      alt={description}\n      {...restProps}\n    />\n  );\n};\n\nexport default WeatherIcon;\n","import styled from \"styled-components\";\nimport Temp from \"js/components/Temp\";\n\nconst CurrentCard = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 30px 80px;\n  margin: 0 8px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  background-color: #fff;\n  width: auto;\n  @media (max-width: 790px) {\n    padding: 30px;\n  }\n  @media (max-width: 507px) {\n    flex-direction: column-reverse;\n    align-items: center;\n  }\n`;\n\nconst IconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  img {\n    margin: -60px -30px;\n    @media (max-width: 507px) {\n      margin-top: -40px;\n    }\n  }\n`;\n\nconst LargeTemp = styled(Temp)`\n  font-size: 50px;\n  font-weight: 500;\n  color: #4f4f4f;\n`;\n\nconst StyledDescription = styled.div`\n  margin-bottom: 15px;\n  text-transform: capitalize;\n`;\n\nconst StyledLocationAndTime = styled.div`\n  font-size: 24px;\n  font-weight: 300;\n  text-align: right;\n  @media (max-width: 630px) {\n    font-size: 18px;\n    font-weight: 400;\n  }\n  @media (max-width: 507px) {\n    text-align: center;\n  }\n`;\n\nexport {\n  CurrentCard,\n  IconContainer,\n  LargeTemp,\n  StyledDescription,\n  StyledLocationAndTime,\n};\n","import DateDisplay from \"js/components/DateDisplay\";\nimport Temp from \"js/components/Temp\";\nimport WeatherIcon from \"js/components/WeatherIcon\";\nimport {\n  CurrentCard,\n  IconContainer,\n  LargeTemp,\n  StyledDescription,\n  StyledLocationAndTime,\n} from \"./index.styled\";\n\n/**\n * Panel showing current weather\n */\nconst CurrentWeather = ({ weather, cityName }) => {\n  const { current, daily, timezone } = weather;\n  const { temp, dt } = current;\n  const description = current.weather[0].description;\n  // min should ideally use min(forecastMin, historyMin)\n  // max should ideally use max(forecastMax, historyMax)\n  const {\n    temp: { min, max },\n  } = daily[0]; // today's forecast\n  return (\n    <CurrentCard>\n      <div>\n        <IconContainer>\n          <div>\n            <LargeTemp value={temp} aria-label=\"current\" />\n            <StyledDescription>{description}</StyledDescription>\n            <div>\n              <Temp value={Math.max(temp, max)} high /> |{\" \"}\n              <Temp value={Math.min(temp, min)} high={false} />\n            </div>\n          </div>\n          <WeatherIcon height=\"250px\" animated description={description} />\n        </IconContainer>\n      </div>\n      <StyledLocationAndTime>\n        {cityName}\n        <DateDisplay ts={dt} timezone={timezone} short={false} />\n      </StyledLocationAndTime>\n    </CurrentCard>\n  );\n};\n\nexport default CurrentWeather;\n","import styled from \"styled-components\";\nimport DateDisplay from \"js/components/DateDisplay\";\nimport Temp from \"js/components/Temp\";\nimport WeatherIcon from \"js/components/WeatherIcon\";\n\nconst StyledDate = styled(DateDisplay)`\n  font-weight: 600;\n  font-size: 20px;\n  color: #666;\n`;\n\nconst IconContainer = styled.div`\n  margin: -10px 0;\n`;\n\nconst PreviewCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15px 30px;\n  margin: 5px 8px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  background-color: #fff;\n`;\n\nconst Preview = ({ day }) => {\n  const {\n    temp: { min, max },\n    dt,\n    timezone,\n  } = day;\n  const description = day.weather[0].description;\n  return (\n    <PreviewCard>\n      <div>\n        <StyledDate ts={dt} timezone={timezone} />\n      </div>\n      <IconContainer>\n        <WeatherIcon description={description} height=\"80px\" />\n      </IconContainer>\n      <div>\n        <Temp value={max} high /> | <Temp value={min} high={false} />\n      </div>\n    </PreviewCard>\n  );\n};\n\nexport default Preview;\n","import styled from \"styled-components\";\nimport Preview from \"js/components/Preview\";\n\nconst ForecastContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\n/**\n * List of 5-day forecast\n */\nconst DailyForecast = ({ forecast }) => {\n  return (\n    <ForecastContainer>\n      {forecast.slice(1, 6).map((day) => (\n        <Preview day={day} key={day.dt} />\n      ))}\n    </ForecastContainer>\n  );\n};\n\nexport default DailyForecast;\n","const API_KEY = \"f7fdb99a7d19c0331381a9cc142379c5\";\n\nconst getCurrent = async (city) => {\n  const response = await fetch(\n    `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`\n  );\n  return response.json();\n};\n\nconst getCurrentAndForecast = async ({ lat = 32.7153, lon = -117.1573 }) => {\n  const response = await fetch(\n    `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=imperial&appid=${API_KEY}`\n  );\n  return response.json();\n};\n\nexport { getCurrent, getCurrentAndForecast };\n","import styled, { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: 'Open Sans', sans-serif;\n    background-color: #e3f3ff;\n  }\n`;\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst MainContent = styled.div`\n  max-width: 100%;\n  width: 790px;\n`;\n\nconst SearchContainer = styled.div`\n  margin: 20px 8px 40px;\n`;\n\nconst CurrentContainer = styled.div`\n  margin: 0 0 10px;\n`;\n\nexport {\n  GlobalStyle,\n  MainContainer,\n  MainContent,\n  SearchContainer,\n  CurrentContainer,\n};\n","import { useEffect, useState } from \"react\";\nimport Search from \"js/components/Search\";\nimport CurrentWeather from \"js/components/CurrentWeather\";\nimport DailyForecast from \"js/components/DailyForecast\";\nimport { getCurrentAndForecast } from \"js/fetches/weather\";\nimport cities from \"js/data/cities\";\nimport {\n  GlobalStyle,\n  MainContainer,\n  MainContent,\n  SearchContainer,\n  CurrentContainer,\n} from \"./index.styled\";\n\nconst Main = () => {\n  const [weather, setWeather] = useState();\n  const [cityName, setCityName] = useState(\"San Diego\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      setLoading(true);\n      const city = cities[cityName];\n      setWeather(await getCurrentAndForecast(city));\n      setLoading(false);\n    };\n    fetchWeather();\n  }, [cityName]);\n\n  return (\n    <MainContainer>\n      <GlobalStyle />\n      <MainContent>\n        <SearchContainer>\n          <Search\n            cityName={cityName}\n            onChange={(select) => setCityName(select.value)}\n          />\n        </SearchContainer>\n        {!loading && (\n          <>\n            <CurrentContainer>\n              <CurrentWeather weather={weather} cityName={cityName} />\n            </CurrentContainer>\n            <DailyForecast forecast={weather.daily} />\n          </>\n        )}\n        {loading && (\n          <div style={{ textAlign: \"center\" }}>\n            <img src=\"/animated/snowy-6.svg\" alt=\"loading icon\" width=\"200px\" />\n          </div>\n        )}\n      </MainContent>\n    </MainContainer>\n  );\n};\n\nexport default Main;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Main from \"js/components/Main\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}